package br.com.gmp.comps.calendar;

import java.awt.event.MouseListener;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import org.jdesktop.swingx.JXMonthView;

/**
 * Painel do calendario padrão do sistema
 *
 * @author kaciano
 * @version 1.0
 */
public class GMPCalendar extends javax.swing.JPanel {

    private Date date;

    /**
     * Cria nova instancia de GMPCalendar
     */
    public GMPCalendar() {
        initComponents();
        this.date = new Date();
    }

    /**
     * Cria nova instancia de GMPCalendar
     *
     * @param date <code>Date</code> Data do calendario
     */
    public GMPCalendar(Date date) {
        this.date = date;
    }

    /**
     * Retorna a data selecionada
     *
     * @return <code>Date</code> Data selecionada
     * @throws ParseException
     */
    public Date getDate() throws ParseException {
        return date;
    }

    /**
     * Modifica a data
     *
     * @param date <code>Date</code> Data do calendario
     */
    public void setDate(Date date) {
        this.date = date;
        jXCalendar.getCalendar().set(date.getYear(), date.getMonth(), date.getDay());
        jXCalendar.setSelectionDate(date);
        jXCalendar.setFirstDisplayedDay(date);
        jLYear.setText(String.valueOf(date.getYear() + 1900));
        jXCalendar.repaint();
        jXCalendar.revalidate();
    }

    /**
     * Vai para o próximo mês
     */
    public void nextMonth() {
        if (date.getMonth() == 12) {
            date.setMonth(1);
            date.setYear(date.getYear() + 1);
        } else {
            date.setMonth(date.getMonth() + 1);
        }
        setDate(date);
    }

    /**
     * Volta para o mês anterior
     */
    public void previousMonth() {
        if (date.getMonth() == 1) {
            date.setMonth(12);
            date.setYear(date.getYear() - 1);
        } else {
            date.setMonth(date.getMonth() - 1);
        }
        setDate(date);
    }

    /**
     * Vai para o próximo ano
     */
    public void nextYear() {
        date.setYear(date.getYear() + 1);
        setDate(date);
    }

    /**
     * Volta ao ano anterior
     */
    public void previousYear() {
        date.setYear(date.getYear() - 1);
        setDate(date);
    }

    /**
     * Retorna o calendario
     *
     * @return <code>Calendar</code> Calendario
     */
    public Calendar getCalendar() {
        return jXCalendar.getCalendar();
    }

    /**
     * Retorna o JXMonthView
     *
     * @return <code>JXMonthView</code> Calendario
     */
    public JXMonthView getjCalendar() {
        return jXCalendar;
    }
    @Override
    public synchronized void addMouseListener(MouseListener l) {
        super.addMouseListener(l);
        this.jXCalendar.addMouseListener(l);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTBPrev = new javax.swing.JToolBar();
        jBPreviousYear = new javax.swing.JButton();
        jBPreviousMonth = new javax.swing.JButton();
        jTBYear = new javax.swing.JToolBar();
        jLYear = new javax.swing.JLabel();
        jTBNext = new javax.swing.JToolBar();
        jBNextMonth = new javax.swing.JButton();
        jBNextYear = new javax.swing.JButton();
        jPDate = new javax.swing.JPanel();
        jXCalendar = new org.jdesktop.swingx.JXMonthView();

        setBorder(null);
        setMaximumSize(new java.awt.Dimension(253, 190));
        setMinimumSize(new java.awt.Dimension(253, 190));
        setPreferredSize(new java.awt.Dimension(253, 190));

        jTBPrev.setFloatable(false);
        jTBPrev.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jBPreviousYear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gmp/comps/icons/16/Hide_left.png"))); // NOI18N
        jBPreviousYear.setToolTipText("Volta para o ano anterior");
        jBPreviousYear.setFocusable(false);
        jBPreviousYear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBPreviousYear.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBPreviousYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPreviousYearActionPerformed(evt);
            }
        });
        jTBPrev.add(jBPreviousYear);

        jBPreviousMonth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gmp/comps/icons/16/Navigate_left.png"))); // NOI18N
        jBPreviousMonth.setToolTipText("Volta para o mês anterior");
        jBPreviousMonth.setFocusable(false);
        jBPreviousMonth.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBPreviousMonth.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBPreviousMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPreviousMonthActionPerformed(evt);
            }
        });
        jTBPrev.add(jBPreviousMonth);

        jTBYear.setFloatable(false);

        jLYear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLYear.setText("2014");
        jLYear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLYear.setMaximumSize(new java.awt.Dimension(32768, 15));
        jTBYear.add(jLYear);

        jTBNext.setFloatable(false);

        jBNextMonth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gmp/comps/icons/16/Navigate_right.png"))); // NOI18N
        jBNextMonth.setToolTipText("Avança para o próximo mês");
        jBNextMonth.setFocusable(false);
        jBNextMonth.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBNextMonth.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBNextMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNextMonthActionPerformed(evt);
            }
        });
        jTBNext.add(jBNextMonth);

        jBNextYear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gmp/comps/icons/16/Hide_right.png"))); // NOI18N
        jBNextYear.setToolTipText("Avança para o próximo ano");
        jBNextYear.setFocusable(false);
        jBNextYear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBNextYear.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBNextYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNextYearActionPerformed(evt);
            }
        });
        jTBNext.add(jBNextYear);

        jPDate.setPreferredSize(new java.awt.Dimension(253, 190));

        jXCalendar.setDaysOfTheWeek(new String[] {"Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"});
        jXCalendar.setDaysOfTheWeekForeground(new java.awt.Color(102, 0, 0));
        jXCalendar.setMaximumSize(new java.awt.Dimension(253, 200));
        jXCalendar.setMinimumSize(new java.awt.Dimension(253, 200));
        jXCalendar.setPreferredSize(new java.awt.Dimension(253, 200));
        jXCalendar.setSelectionForeground(new java.awt.Color(255, 102, 0));
        jXCalendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXCalendarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPDateLayout = new javax.swing.GroupLayout(jPDate);
        jPDate.setLayout(jPDateLayout);
        jPDateLayout.setHorizontalGroup(
            jPDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPDateLayout.setVerticalGroup(
            jPDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXCalendar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTBPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jTBYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jTBNext, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTBNext, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTBPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTBYear, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jPDate, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTBNext, jTBPrev, jTBYear});

    }// </editor-fold>//GEN-END:initComponents

    private void jBPreviousYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPreviousYearActionPerformed
        previousYear();
    }//GEN-LAST:event_jBPreviousYearActionPerformed

    private void jBPreviousMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPreviousMonthActionPerformed
        previousMonth();
    }//GEN-LAST:event_jBPreviousMonthActionPerformed

    private void jBNextMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNextMonthActionPerformed
        nextMonth();
    }//GEN-LAST:event_jBNextMonthActionPerformed

    private void jBNextYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNextYearActionPerformed
        nextYear();
    }//GEN-LAST:event_jBNextYearActionPerformed

    private void jXCalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXCalendarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jXCalendarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBNextMonth;
    private javax.swing.JButton jBNextYear;
    private javax.swing.JButton jBPreviousMonth;
    private javax.swing.JButton jBPreviousYear;
    private javax.swing.JLabel jLYear;
    private javax.swing.JPanel jPDate;
    private javax.swing.JToolBar jTBNext;
    private javax.swing.JToolBar jTBPrev;
    private javax.swing.JToolBar jTBYear;
    private org.jdesktop.swingx.JXMonthView jXCalendar;
    // End of variables declaration//GEN-END:variables
}
