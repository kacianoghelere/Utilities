package br.com.gmp.comps.menuitem;

import br.com.gmp.comps.BaseColors;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.Action;
import javax.swing.Icon;
import javax.swing.JMenuItem;
import javax.swing.border.LineBorder;

/**
 * Item de menu com formatação própria
 *
 * @author kaciano
 */
public class GMPMenuItem extends JMenuItem {

    private String prefix;
    private String title;
    private Color high;
    private Color base;

    /**
     * Cria nova instancia de GMPMenuItem
     *
     * @param prefix Prefixo
     * @param title Titulo
     */
    public GMPMenuItem(String prefix, String title) {
        initComponents();
        setTitle(prefix, title);
        this.high = BaseColors.systemColor;
        this.base = new JMenuItem().getBackground();
        addListener();
    }

    /**
     * Cria nova instancia de GMPMenuItem
     *
     * @param prefix Prefixo
     * @param title Titulo
     * @param a Action
     */
    public GMPMenuItem(String prefix, String title, Action a) {
        super(a);
        this.prefix = prefix;
        this.title = title;
        setTitle(prefix, title);
        this.high = BaseColors.systemColor;
        this.base = new JMenuItem().getBackground();
        addListener();
    }

    /**
     * Cria nova instancia de GMPMenuItem
     *
     * @param prefix Prefixo
     * @param title Titulo
     * @param icon Icone
     */
    public GMPMenuItem(String prefix, String title, Icon icon) {
        super(icon);
        this.prefix = prefix;
        this.title = title;
        setTitle(prefix, title);
        this.high = BaseColors.systemColor;
        this.base = new JMenuItem().getBackground();
        addListener();
    }

    /**
     *
     * @param highlight
     */
    public GMPMenuItem(Color highlight) {
        this.high = highlight;
        this.base = new JMenuItem().getBackground();
        addListener();
    }

    /**
     *
     * @param icon
     * @param highlight
     */
    public GMPMenuItem(Icon icon, Color highlight) {
        super(icon);
        this.high = highlight;
        this.base = new JMenuItem().getBackground();
        addListener();
    }

    /**
     *
     * @param string
     * @param icon
     */
    public GMPMenuItem(String string, Icon icon) {
        super(string, icon);
        this.high = BaseColors.systemColor;
        this.base = new JMenuItem().getBackground();
        addListener();
    }

    /**
     *
     * @param string
     */
    public GMPMenuItem(String string) {
        super(string);
        this.high = BaseColors.systemColor;
        this.base = new JMenuItem().getBackground();
        addListener();
    }

    /**
     *
     * @param string
     * @param icon
     * @param highlight
     */
    public GMPMenuItem(String string, Icon icon, Color highlight) {
        super(string, icon);
        this.high = highlight;
        this.base = new JMenuItem().getBackground();
        addListener();
    }

    /**
     *
     */
    private void addListener() {
        this.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent me) {
            }

            @Override
            public void mousePressed(MouseEvent me) {
            }

            @Override
            public void mouseReleased(MouseEvent me) {
            }

            @Override
            public void mouseEntered(MouseEvent me) {
                setBackground(high);
            }

            @Override
            public void mouseExited(MouseEvent me) {
                setBackground(base);
            }
        });
    }

    /**
     * Adiciona o titulo com a formatação correta
     *
     * @param prefix Prefixo
     * @param title Titulo
     */
    private void setTitle(String prefix, String title) {
        super.setText("<html><b>" + prefix + "</b> " + title + "</html>");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    /**
     * Retorna o prefixo
     *
     * @return Prefixo
     */
    public String getPrefix() {
        return prefix;
    }

    /**
     * Modifica o prefixo
     *
     * @param prefix Novo Prefixo
     */
    public void setPrefix(String prefix) {
        this.prefix = prefix;
        setTitle(prefix, title);
    }

    /**
     * Retorna o titulo
     *
     * @return Titulo
     */
    public String getTitle() {
        return title;
    }

    /**
     * Modifica o titulo
     *
     * @param title Novo titulo
     */
    public void setTitle(String title) {
        this.title = title;
        setTitle(prefix, title);
    }

    /**
     *
     * @return
     */
    public Color getHigh() {
        return high;
    }

    /**
     *
     * @param high
     */
    public void setHigh(Color high) {
        this.high = high;
    }

    /**
     *
     * @return
     */
    public Color getBase() {
        return base;
    }

    /**
     *
     * @param base
     */
    public void setBase(Color base) {
        this.base = base;
    }

}
